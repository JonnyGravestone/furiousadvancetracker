.TH "fat.h" 3 "Thu May 5 2011" "Version version 0-02" "FAT FuriousAdvanceTracker" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fat.h \- 
.PP
Ce fichier contient quelques macros, définitions et des fonctions de routine pour le tracker.  

.SH SYNOPSIS
.br
.PP
\fC#include 'gfx.h'\fP
.br
\fC#include 'data.h'\fP
.br
\fC#include 'cursors.h'\fP
.br
\fC#include 'popup.h'\fP
.br
\fC#include 'screen_song.h'\fP
.br
\fC#include 'screen_project.h'\fP
.br
\fC#include 'screen_live.h'\fP
.br
\fC#include 'screen_composer.h'\fP
.br
\fC#include 'screen_blocks.h'\fP
.br
\fC#include 'screen_notes.h'\fP
.br
\fC#include 'screen_instrument.h'\fP
.br
\fC#include 'screen_effects.h'\fP
.br
\fC#include 'player.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSCREEN_PROJECT_ID\fP   0"
.br
.RI "\fIId écran projet. \fP"
.ti -1c
.RI "#define \fBSCREEN_LIVE_ID\fP   1"
.br
.RI "\fIId écran live. \fP"
.ti -1c
.RI "#define \fBSCREEN_COMPOSER_ID\fP   2"
.br
.RI "\fIId écran composer. \fP"
.ti -1c
.RI "#define \fBSCREEN_SONG_ID\fP   3"
.br
.RI "\fIId écran song. \fP"
.ti -1c
.RI "#define \fBSCREEN_BLOCKS_ID\fP   4"
.br
.RI "\fIId écran block. \fP"
.ti -1c
.RI "#define \fBSCREEN_NOTES_ID\fP   5"
.br
.RI "\fIId écran notes. \fP"
.ti -1c
.RI "#define \fBSCREEN_INSTRUMENTS_ID\fP   6"
.br
.RI "\fIId écran instrument. \fP"
.ti -1c
.RI "#define \fBSCREEN_EFFECTS_ID\fP   7"
.br
.RI "\fIId écran effects (tables) \fP"
.ti -1c
.RI "#define \fBNB_SCREEN\fP   8;"
.br
.RI "\fINombre total d'écran disponible pour \fBFAT\fP. \fP"
.ti -1c
.RI "#define \fBTEXT_COLOR\fP   245"
.br
.RI "\fINuméro de la couleur du texte. Ce numéro correspond à une couleur dans la palette. \fBNE PAS TOUCHER\fP \fP"
.ti -1c
.RI "#define \fBINPUT_R_CURSOR_CHANGE_X\fP   216"
.br
.RI "\fIPosition par défaut du curseur de changement d'onglet (partie instrument). \fP"
.ti -1c
.RI "#define \fBINPUT_R_CURSOR_CHANGE_Y\fP   24"
.br
.RI "\fIPosition par défaut du curseur de changement d'onglet (partie instrument). \fP"
.ti -1c
.RI "#define \fBSLOWDOWN_COUNTER\fP   4"
.br
.RI "\fIDéfinit la valeur à atteindre par le speedcounter avant de tester les actions utilisateurs. \fP"
.ti -1c
.RI "#define \fBFAT_FORMAT_LINE\fP   '%.2x\\0'"
.br
.RI "\fIDéfinition globale du format d'affichage des numéros de lignes. \fP"
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "void \fBFAT_initSpritePalette\fP ()"
.br
.RI "\fILa palette pour l'écran d'introduction est différente: cette fonction la charge au bon endroit. \fP"
.ti -1c
.RI "void \fBFAT_initScreenPalette\fP ()"
.br
.RI "\fICharge la palette pour les écrans: les sprites sont exclus. \fP"
.ti -1c
.RI "void \fBFAT_switchToScreen\fP (u8 screenId)"
.br
.RI "\fICette méthode permet de changer d'écran. \fP"
.ti -1c
.RI "void \fBFAT_reinitScreen\fP ()"
.br
.RI "\fIMéthode qui permet de réinitialiser le BG2 proprement. \fP"
.ti -1c
.RI "void \fBFAT_forceClearTextLayer\fP ()"
.br
.RI "\fIMéthode à réfactorer : effacer l'écran texte en affichant des espaces partout. \fP"
.ti -1c
.RI "void \fBFAT_waitVSync\fP ()"
.br
.RI "\fIAttendre la synchronisation du balayage vertical. \fP"
.ti -1c
.RI "void \fBFAT_blockCPU\fP (u16 time)"
.br
.RI "\fIBloque le cpu un certain temps. \fP"
.ti -1c
.RI "void \fBFAT_player_startPlayerFromSequences\fP (u8 startLine)"
.br
.RI "\fIPrototype. Fonction définie dans \fBplayer.h\fP. \fP"
.ti -1c
.RI "void \fBFAT_player_startPlayerFromBlocks\fP (u8 sequenceId, u8 startLine, u8 \fBchannel\fP)"
.br
.RI "\fIPrototype. Fonction définie dans \fBplayer.h\fP. \fP"
.ti -1c
.RI "void \fBFAT_player_startPlayerFromNotes\fP (u8 blockId, u8 startLine, u8 \fBchannel\fP)"
.br
.RI "\fIPrototype. Fonction définie dans \fBplayer.h\fP. \fP"
.ti -1c
.RI "void \fBFAT_player_stopPlayer\fP ()"
.br
.RI "\fIPrototype. Fonction définie dans \fBplayer.h\fP. \fP"
.ti -1c
.RI "void \fBFAT_player_playComposerNote\fP (u8 noteLine)"
.br
.RI "\fIPrototype. Fonction définie dans \fBplayer.h\fP. \fP"
.ti -1c
.RI "void \fBFAT_init\fP ()"
.br
.RI "\fIInitialisation de HAM et d'autres données propres à \fBFAT\fP. \fP"
.ti -1c
.RI "void \fBFAT_initIntroPalette\fP ()"
.br
.RI "\fICharge la palette réservée pour l'écran d'intro. \fP"
.ti -1c
.RI "void \fBFAT_showIntro\fP ()"
.br
.RI "\fIMéthode pour afficher un simple écran 'titre' avec une boucle infinie en attente du bouton 'START'. \fP"
.ti -1c
.RI "void \fBFAT_wait\fP (u32 nbFrames)"
.br
.RI "\fIPermet de patienter un certain nombre de cycle de balayage vertical. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "bool \fBmutex\fP = 1"
.br
.RI "\fICette variable sert à gérer les contextes conflictuels (notamment dans les boucles affichant du texte à gogo). \fP"
.ti -1c
.RI "u8 \fBspeedCounter\fP = 0"
.br
.RI "\fICette variable sert à compter le nombre de rafraichissement nécessaire avant de prendre en considération les actions utilisateurs. \fP"
.ti -1c
.RI "u8 \fBFAT_currentScreen\fP = SCREEN_SONG_ID"
.br
.RI "\fIStocke l'id de l'écran sur lequel l'utilisateur se situe. \fP"
.ti -1c
.RI "bool \fBFAT_isCurrentlyPlaying\fP = 0"
.br
.RI "\fIPermet de savoir si le player est en train de jouer la chanson. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Ce fichier contient quelques macros, définitions et des fonctions de routine pour le tracker. 

Il contient également tous les include vers les autres fichiers. 
.SH "Documentation des fonctions"
.PP 
.SS "void FAT_blockCPU (u16time)"
.PP
Bloque le cpu un certain temps. Attention le temps n'est pas exprimé en secondes ! Il s'agit juste d'une variable: plus elle est grande, plus le temps de blocage est long.
.PP
\fBParamètres:\fP
.RS 4
\fItime\fP variable pour définir le temps d'attente 
.RE
.PP

.SS "void FAT_forceClearTextLayer ()"
.PP
Méthode à réfactorer : effacer l'écran texte en affichant des espaces partout. Performance warning ! Afficher du texte via HAM est lent ! 
.SS "void FAT_init ()"
.PP
Initialisation de HAM et d'autres données propres à \fBFAT\fP. Initialisations:
.IP "\(bu" 2
HAM (init, text, bgMode, textCol, fx)
.IP "\(bu" 2
les palettes pour \fBFAT\fP (screen et sprite)
.IP "\(bu" 2
la popup de déplacement
.IP "\(bu" 2
les curseurs
.IP "\(bu" 2
les sprites
.IP "\(bu" 2
les données du projet 
.PP

.SS "void FAT_player_playComposerNote (u8noteLine)"
.PP
Prototype. Fonction définie dans \fBplayer.h\fP. Prototype. Fonction définie dans \fBplayer.h\fP.
.PP
\fBParamètres:\fP
.RS 4
\fInoteLine\fP le numéro de ligne de la note dans le composer 
.RE
.PP

.SS "void FAT_player_startPlayerFromBlocks (u8sequenceId, u8startLine, u8channel)"
.PP
Prototype. Fonction définie dans \fBplayer.h\fP. Prototype. Fonction définie dans \fBplayer.h\fP.
.PP
\fBParamètres:\fP
.RS 4
\fIsequenceId\fP l'id de la séquence à jouer 
.br
\fIstartLine\fP le numéro de ligne de départ 
.br
\fIchannel\fP le numéro de channel sur lequel on joue 
.RE
.PP

.SS "void FAT_player_startPlayerFromNotes (u8blockId, u8startLine, u8channel)"
.PP
Prototype. Fonction définie dans \fBplayer.h\fP. Prototype. Fonction définie dans \fBplayer.h\fP.
.PP
\fBParamètres:\fP
.RS 4
\fIblockId\fP l'id du block à jouer 
.br
\fIstartLine\fP la ligne de départ (TODO retirer ce paramètre on devrait jouer depuis 0 tous le temps) 
.br
\fIchannel\fP le numéro de channel sur lequel on joue 
.RE
.PP

.SS "void FAT_reinitScreen ()"
.PP
Méthode qui permet de réinitialiser le BG2 proprement. \fBNE PAS TOUCHER ! \fP 
.SS "void FAT_switchToScreen (u8screenId)"
.PP
Cette méthode permet de changer d'écran. \fBParamètres:\fP
.RS 4
\fIscreenId\fP l'id de l'écran que l'on souhaite afficher. 
.RE
.PP

.SS "void FAT_wait (u32nbFrames)"
.PP
Permet de patienter un certain nombre de cycle de balayage vertical. \fBParamètres:\fP
.RS 4
\fInbFrames\fP le nombre de balayage à attendre. 
.RE
.PP

.SH "Documentation des variables"
.PP 
.SS "bool \fBmutex\fP = 1"
.PP
Cette variable sert à gérer les contextes conflictuels (notamment dans les boucles affichant du texte à gogo). Si le mutex est à zéro alors aucun affichage ne pourra avoir lieu.
.PP
Usage: \fCvoid printBeaucoupTexte() { mutex = 0; print text1 print text2 mutex = 1; }\fP \fBNE PAS TOUCHER !\fP 
.SS "u8 \fBspeedCounter\fP = 0"
.PP
Cette variable sert à compter le nombre de rafraichissement nécessaire avant de prendre en considération les actions utilisateurs. Valeurs optimales:
.IP "\(bu" 2
4 pour la GBA hard
.IP "\(bu" 2
5~7 pour l'émulateur 
.PP

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour FAT FuriousAdvanceTracker à partir du code source.
