.TH "player.h" 3 "Thu May 5 2011" "Version version 0-02" "FAT FuriousAdvanceTracker" \" -*- nroff -*-
.ad l
.nh
.SH NAME
player.h \- 
.PP
Contient toutes les fonctions nécessaires pour la lecture 'sonore' du projet en cours de composition.  

.SH SYNOPSIS
.br
.PP
\fC#include 'data.h'\fP
.br
\fC#include 'screen_song.h'\fP
.br
\fC#include 'soundApi/soundApi.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTEMPO_TIMER_HARDWARE_VALUE\fP   70"
.br
.RI "\fIDéfinition d'une valeur pour ralentir le décompte du tempo. \fP"
.ti -1c
.RI "#define \fBWAIT_FOR_START\fP   1"
.br
.RI "\fIDéfinition du temps d'attente entre 2 appui sur la touche START. \fP"
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "void \fBFAT_player_timerFunc_playSequences\fP ()"
.br
.RI "\fIFunction temporisée qui lit toutes les séquences. (callback) \fP"
.ti -1c
.RI "void \fBFAT_player_timerFunc_playBlocks\fP ()"
.br
.RI "\fIFonction temporisée qui lit tous les blocks d'une séquence. (callback) \fP"
.ti -1c
.RI "void \fBFAT_player_timerFunc_playNotes\fP ()"
.br
.RI "\fIFonction temporisée qui lit toutes les notes d'un block. (callback) \fP"
.ti -1c
.RI "void \fBFAT_player_moveOrHideCursor\fP (u8 \fBchannel\fP)"
.br
.RI "\fIDéplace ou cache les curseurs de lecture en fonction de l'état du player. \fP"
.ti -1c
.RI "void \fBFAT_player_hideAllCursors\fP ()"
.br
.RI "\fICache tous les curseurs utilisés lors de la lecture. \fP"
.ti -1c
.RI "void \fBFAT_player_hideSequencesCursors\fP ()"
.br
.RI "\fICache les curseurs utilisés lors de la lecture dans l'écran SONG. \fP"
.ti -1c
.RI "void \fBFAT_player_hideBlockCursor\fP ()"
.br
.RI "\fICache les curseurs utilisés lors de la lecture dans l'écran \fBBLOCK\fP. \fP"
.ti -1c
.RI "void \fBFAT_player_hideNoteCursor\fP ()"
.br
.RI "\fICache les curseurs utilisés lors de la lecture dans l'écran \fBNOTE\fP. \fP"
.ti -1c
.RI "void \fBFAT_player_playNote\fP (\fBnote\fP *\fBnote\fP, u8 \fBchannel\fP)"
.br
.RI "\fIJoue une note sur un channel. \fP"
.ti -1c
.RI "void \fBFAT_player_playNoteWithTsp\fP (\fBnote\fP *\fBnote\fP, u8 \fBchannel\fP, u8 transpose)"
.br
.RI "\fIJoue une note sur un channel en ajoutant un transpose. \fP"
.ti -1c
.RI "void \fBFAT_player_initCursors\fP ()"
.br
.RI "\fIInitialisation du curseur player pour les notes. \fP"
.ti -1c
.RI "void \fBFAT_player_timerFunc_iCanPressStart\fP ()"
.br
.RI "\fIFonction callback associée avec un TIMER: permet de décompter le temps d'attente pour l'appui sur la touche START. \fP"
.ti -1c
.RI "void \fBFAT_player_playComposerNote\fP (u8 noteLine)"
.br
.RI "\fIJoue une note écrite dans le composer. \fP"
.ti -1c
.RI "void \fBFAT_player_startPlayerFromSequences\fP (u8 startLine)"
.br
.RI "\fILance la lecture de toute la track. \fP"
.ti -1c
.RI "void \fBFAT_player_startPlayerFromBlocks\fP (u8 sequenceId, u8 startLine, u8 \fBchannel\fP)"
.br
.RI "\fIDémarrer la lecture d'une séquence (lit tous les blocks de la séquence). \fP"
.ti -1c
.RI "void \fBFAT_player_startPlayerFromNotes\fP (u8 blockId, u8 startLine, u8 \fBchannel\fP)"
.br
.RI "\fIDémarre la lecture d'un block entier. \fP"
.ti -1c
.RI "void \fBFAT_player_stopPlayer\fP ()"
.br
.RI "\fIArrète la lecture de la track. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "u8 \fBactualSequencesForChannel\fP [6]"
.br
.RI "\fIRepères pour le player: les valeurs dans les tableaux représentent des numéros de lignes (séquences). \fP"
.ti -1c
.RI "u8 \fBactualBlocksForChannel\fP [6]"
.br
.RI "\fIRepères pour le player: les valeurs dans les tableaux représentent des numéros de lignes (blocks). \fP"
.ti -1c
.RI "u8 \fBactualNotesForChannel\fP [6]"
.br
.RI "\fIRepères pour le player: les valeurs dans les tableaux représentent des numéros de lignes (notes). \fP"
.ti -1c
.RI "u8 \fBFAT_currentPlayedSequence\fP = NULL_VALUE"
.br
.RI "\fIId de la séquence en cours de lecture. \fP"
.ti -1c
.RI "u8 \fBFAT_currentPlayedChannel\fP = NULL_VALUE"
.br
.RI "\fINuméro du channel en cours de lecture. \fP"
.ti -1c
.RI "u8 \fBFAT_currentPlayedBlock\fP = NULL_VALUE"
.br
.RI "\fIId du block en cours de lecture. \fP"
.ti -1c
.RI "u8 \fBFAT_cursor_player3_obj\fP"
.br
.RI "\fIObjet HAM pour référencer le sprite 'curseur player' de taille 2. \fP"
.ti -1c
.RI "u8 \fBFAT_cursor_player2_obj\fP"
.br
.RI "\fIObjet HAM pour référencer le sprite 'curseur player' de taille 3. \fP"
.ti -1c
.RI "u8 \fBFAT_cursor_playerSequences_obj\fP [6]"
.br
.RI "\fIObjet HAM pour référencer les sprites 'curseur player' utilisés dans l'écran SONG. \fP"
.ti -1c
.RI "u32 \fBtempoReach\fP = TEMPO_TIMER_HARDWARE_VALUE"
.br
.RI "\fICompteur pour le tempo. \fP"
.ti -1c
.RI "u8 \fBiCanPressStart\fP = 1"
.br
.RI "\fIPermet de savoir si l'utilisateur a le droit d'appuyer sur la touche START. \fP"
.ti -1c
.RI "u8 \fBwaitForStart\fP = 0"
.br
.RI "\fICompteur pour décompter le temps d'attente entre 2 appuis de la touche START. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Contient toutes les fonctions nécessaires pour la lecture 'sonore' du projet en cours de composition. 


.SH "Documentation des fonctions"
.PP 
.SS "void FAT_player_initCursors ()"
.PP
Initialisation du curseur player pour les notes. S'occupe de créer les sprites et de les rendre invisibles. 
.SS "void FAT_player_moveOrHideCursor (u8channel)"
.PP
Déplace ou cache les curseurs de lecture en fonction de l'état du player. \fBParamètres:\fP
.RS 4
\fIchannel\fP le numéro de channel sur lequel on joue du son 
.RE
.PP

.SS "void FAT_player_playComposerNote (u8noteLine)"
.PP
Joue une note écrite dans le composer. Prototype. Fonction définie dans \fBplayer.h\fP.
.PP
\fBParamètres:\fP
.RS 4
\fInoteLine\fP le numéro de ligne de la note dans le composer 
.RE
.PP

.SS "void FAT_player_playNote (\fBnote\fP *note, u8channel)"
.PP
Joue une note sur un channel. Cette méthode est un wrapper pour la méthode FAT_player_playNoteWithTsp. Seule la valeur de transpose du projet est utilisée.
.PP
\fBParamètres:\fP
.RS 4
\fInote\fP l'objet \fBNOTE\fP à jouer 
.br
\fIchannel\fP le channel sur lequel jouer la note 
.RE
.PP

.SS "void FAT_player_playNoteWithTsp (\fBnote\fP *note, u8channel, u8transpose)"
.PP
Joue une note sur un channel en ajoutant un transpose. \fBParamètres:\fP
.RS 4
\fInote\fP l'objet \fBNOTE\fP à jouer 
.br
\fIchannel\fP le numéro de channel sur lequel jouer la note 
.br
\fItranspose\fP la valeur de transpose, elle sera ajoutée à celle du projet 
.RE
.PP

.SS "void FAT_player_startPlayerFromBlocks (u8sequenceId, u8startLine, u8channel)"
.PP
Démarrer la lecture d'une séquence (lit tous les blocks de la séquence). Prototype. Fonction définie dans \fBplayer.h\fP.
.PP
\fBParamètres:\fP
.RS 4
\fIsequenceId\fP l'id de la séquence à jouer 
.br
\fIstartLine\fP le numéro de ligne de départ 
.br
\fIchannel\fP le numéro de channel sur lequel on joue 
.RE
.PP

.SS "void FAT_player_startPlayerFromNotes (u8blockId, u8startLine, u8channel)"
.PP
Démarre la lecture d'un block entier. Prototype. Fonction définie dans \fBplayer.h\fP.
.PP
\fBParamètres:\fP
.RS 4
\fIblockId\fP l'id du block à jouer 
.br
\fIstartLine\fP la ligne de départ (TODO retirer ce paramètre on devrait jouer depuis 0 tous le temps) 
.br
\fIchannel\fP le numéro de channel sur lequel on joue 
.RE
.PP

.SS "void FAT_player_startPlayerFromSequences (u8startLine)"
.PP
Lance la lecture de toute la track. Prototype. Fonction définie dans \fBplayer.h\fP. 
.SS "void FAT_player_stopPlayer ()"
.PP
Arrète la lecture de la track. Prototype. Fonction définie dans \fBplayer.h\fP. 
.SH "Documentation des variables"
.PP 
.SS "u32 \fBtempoReach\fP = TEMPO_TIMER_HARDWARE_VALUE"
.PP
Compteur pour le tempo. Lorsque cette variable atteint une valeur donné, alors la lecture de la note suivante est demandée. Le compteur est réinitialisé ensuite. Dans le cas contraire, on attend sans jouer de note. 
.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour FAT FuriousAdvanceTracker à partir du code source.
