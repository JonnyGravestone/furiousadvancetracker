.TH "screen_instrument.h" 3 "Thu May 5 2011" "Version version 0-02" "FAT FuriousAdvanceTracker" \" -*- nroff -*-
.ad l
.nh
.SH NAME
screen_instrument.h \- 
.PP
Ce fichier contient toutes les fonctions relatives à la gestion des instruments.  

.SH SYNOPSIS
.br
.PP
\fC#include 'screen_instrument_cursor.h'\fP
.br

.SS "Fonctions"

.in +1c
.ti -1c
.RI "void \fBFAT_screenInstrument_init\fP ()"
.br
.RI "\fIInitialisation de l'écran instrument. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_checkButtons\fP ()"
.br
.RI "\fITester l'appui sur les boutons. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_switchScreen\fP (u8 type)"
.br
.RI "\fIUtilisez cette méthode pour changer d'écran selon le type d'instrument édité. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_pressA\fP ()"
.br
.RI "\fIFonction wrapper pour gérer l'appui sur la touche A. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_showWaveduty\fP (u8 wavedutyValue, u8 spriteX, u8 spriteY)"
.br
.RI "\fIAffiche le bon sprite pour la valeur du waveduty. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_showEnvdir\fP (u8 envdirValue, u8 spriteX, u8 spriteY)"
.br
.RI "\fIAffiche le bon sprite pour la valeur de la direction de l'enveloppe. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_hideAllEnvdirSprites\fP ()"
.br
.RI "\fICache tous les sprites relatifs à l'affiche de la direction de l'enveloppe. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_hideAllWavedutySprite\fP ()"
.br
.RI "\fICache tous les sprites relatifs à l'affiche du paramètre waveduty. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_mainFunc\fP ()"
.br
.RI "\fIFonction principale de l'écran (callback). \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_printInstrumentNumber\fP ()"
.br
.RI "\fIAffiche le numéro de l'écran en cours d'édition dans le cadre en haut à droite. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_printAllText\fP (u8 type)"
.br
.RI "\fIAffiche toutes les valeurs des paramètres de l'instrument selon son type. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_changeInstrumentType\fP (s8 move)"
.br
.RI "\fICette fonction permet de changer le type de l'instrument en cours d'édition. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_initSpritesForInstrument\fP ()"
.br
.RI "\fICette méthode charge les sprites utilisés dans l'écran de gestion des instruments. \fP"
.ti -1c
.RI "s8 \fBFAT_screenInstrument_giveMeAddedValue\fP ()"
.br
.RI "\fIFonction outil permettant de demander une valeur en fonction d'une touche appuyée. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_pulse_pressA\fP ()"
.br
.RI "\fICette fonction permet de gérer l'appui sur la touche A pour un instrument de type PULSE. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_wave_pressA\fP ()"
.br
.RI "\fICette fonction permet de gérer l'appui sur la touche A pour un instrument de type WAVE. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_noise_pressA\fP ()"
.br
.RI "\fICette fonction permet de gérer l'appui sur la touche A pour un instrument de type NOISE. \fP"
.ti -1c
.RI "void \fBFAT_screenInstrument_sample_pressA\fP ()"
.br
.RI "\fICette fonction permet de gérer l'appui sur la touche A pour un instrument de type SAMPLE. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "bool \fBFAT_screenInstrument_isPopuped\fP = 0"
.br
.RI "\fIPermet de savoir si la popup de déplacement est affichée au dessus de l'écran. \fP"
.ti -1c
.RI "u8 \fBFAT_screenInstrument_isTabulating\fP = 0"
.br
.RI "\fIPermet de savoir si l'utilisateur est en train de changer d'onglet (type d'instrument). \fP"
.ti -1c
.RI "u8 \fBFAT_screenInstrument_currentInstrumentId\fP"
.br
.RI "\fIL'id de l'instrument en cours d'édition. \fP"
.ti -1c
.RI "u8 \fBFAT_instrument_envdir0_obj\fP"
.br
.RI "\fISprite pour la direction de l'enveloppe: valeur 0. \fP"
.ti -1c
.RI "u8 \fBFAT_instrument_envdir1_obj\fP"
.br
.RI "\fISprite pour la direction de l'enveloppe: valeur 1. \fP"
.ti -1c
.RI "u8 \fBFAT_instrument_waveduty0_obj\fP"
.br
.RI "\fISprite pour le paramètre waveduty: valeur 0. \fP"
.ti -1c
.RI "u8 \fBFAT_instrument_waveduty1_obj\fP"
.br
.RI "\fISprite pour le paramètre waveduty: valeur 1. \fP"
.ti -1c
.RI "u8 \fBFAT_instrument_waveduty2_obj\fP"
.br
.RI "\fISprite pour le paramètre waveduty: valeur 2. \fP"
.ti -1c
.RI "u8 \fBFAT_instrument_waveduty3_obj\fP"
.br
.RI "\fISprite pour le paramètre waveduty: valeur 3. \fP"
.in -1c
.SH "Description détaillée"
.PP 
Ce fichier contient toutes les fonctions relatives à la gestion des instruments. 


.SH "Documentation des fonctions"
.PP 
.SS "void FAT_screenInstrument_changeInstrumentType (s8move)"
.PP
Cette fonction permet de changer le type de l'instrument en cours d'édition. Elle gère le déplacement du sprite onglet et permet le switchscreen. 
.PP
\fBParamètres:\fP
.RS 4
\fImove\fP +1 -> type vers la droite, -1 type vers la gauche 
.RE
.PP

.SS "void FAT_screenInstrument_checkButtons ()"
.PP
Tester l'appui sur les boutons. \fBTODO cette méthode est trop grosse et difficilement maintenable. A refactorer. \fP 
.SS "s8 FAT_screenInstrument_giveMeAddedValue ()"
.PP
Fonction outil permettant de demander une valeur en fonction d'une touche appuyée. \fBRenvoie:\fP
.RS 4
Droite: 1, Gauche: -1, Haut: 16, Bas: -16 
.RE
.PP

.SS "void FAT_screenInstrument_initSpritesForInstrument ()"
.PP
Cette méthode charge les sprites utilisés dans l'écran de gestion des instruments. Attention, ne faire appel à cette méthode qu'une seule fois ! 
.SS "void FAT_screenInstrument_printAllText (u8type)"
.PP
Affiche toutes les valeurs des paramètres de l'instrument selon son type. \fBParamètres:\fP
.RS 4
\fItype\fP le type de l'instrument 
.RE
.PP

.SS "void FAT_screenInstrument_showEnvdir (u8envdirValue, u8spriteX, u8spriteY)"
.PP
Affiche le bon sprite pour la valeur de la direction de l'enveloppe. \fBParamètres:\fP
.RS 4
\fIenvdirValue\fP la valeur du paramètre 
.br
\fIspriteX\fP position en X pour l'affichage 
.br
\fIspriteY\fP position en Y pour l'affichage 
.RE
.PP

.SS "void FAT_screenInstrument_showWaveduty (u8wavedutyValue, u8spriteX, u8spriteY)"
.PP
Affiche le bon sprite pour la valeur du waveduty. \fBParamètres:\fP
.RS 4
\fIwavedutyValue\fP la valeur du paramètre 
.br
\fIspriteX\fP position en X pour l'affichage 
.br
\fIspriteY\fP position en Y pour l'affichage 
.RE
.PP

.SS "void FAT_screenInstrument_switchScreen (u8type)"
.PP
Utilisez cette méthode pour changer d'écran selon le type d'instrument édité. \fBParamètres:\fP
.RS 4
\fItype\fP le type d'instru à éditer cf. #define INSTRUMENT_TYPE_* 
.RE
.PP

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour FAT FuriousAdvanceTracker à partir du code source.
